{"version":3,"sources":["components/Profile/ProfileCard/ProfileCard.styled.js","components/Profile/ProfileInfo/ProfileInfo.styled.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/ProfileCard/ProfileCard.js","components/App/App.styled.js","components/App/App.js","index.js","constants/theme.js"],"names":["Card","styled","div","Description","Avatar","img","Name","p","props","theme","colors","primaryText","Tag","secondaryText","Location","StatsList","ul","StatsItem","li","Label","span","Quantity","ProfileInfo","name","tag","location","avatar","stats","src","alt","followers","views","likes","ProfileCard","data","Container","App","userData","ReactDOM","render","StrictMode","white","black","green","red","blue","spacing","value","document","getElementById"],"mappings":"oqBAEaA,EAAOC,IAAOC,IAAV,kSCAJC,EAAcF,IAAOC,IAAV,sDAIXE,EAASH,IAAOI,IAAV,uGAONC,EAAOL,IAAOM,EAAV,8JAML,SAACC,GAAD,gBAAcA,EAAMC,MAAMC,OAAOC,gBAGhCC,EAAMX,IAAOM,EAAV,qEAEJ,SAACC,GAAD,gBAAcA,EAAMC,MAAMC,OAAOG,kBAGhCC,EAAWb,IAAOM,EAAV,4CACT,SAACC,GAAD,gBAAcA,EAAMC,MAAMC,OAAOG,kBAGhCE,EAAYd,IAAOe,GAAV,qFAIjB,IAGQC,EAAYhB,IAAOiB,GAAV,+HAKT,SAACV,GAAD,0BAAwBA,EAAMC,MAAMC,OAAOG,kBAG3CM,EAAQlB,IAAOmB,KAAV,6GAIN,SAACZ,GAAD,gBAAcA,EAAMC,MAAMC,OAAOG,kBAGhCQ,EAAWpB,IAAOmB,KAAV,2CACV,SAACZ,GAAD,gBAAcA,EAAMC,MAAMC,OAAOC,gB,OClD/BW,EAAc,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MACxD,OACG,qCACG,eAACxB,EAAD,WACG,cAACC,EAAD,CACGwB,IAAKF,EACLG,IAAI,kHAEP,cAACvB,EAAD,UAAOiB,IACP,cAACX,EAAD,UAAMY,IACN,cAACV,EAAD,UAAWW,OAGd,eAACV,EAAD,WACG,eAACE,EAAD,WACG,cAACE,EAAD,yBACA,cAACE,EAAD,UAAWM,EAAMG,eAEpB,eAACb,EAAD,WACG,cAACE,EAAD,qBACA,cAACE,EAAD,UAAWM,EAAMI,WAEpB,eAACd,EAAD,WACG,cAACE,EAAD,qBACA,cAACE,EAAD,UAAWM,EAAMK,kBCxBnBC,EAAc,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC3B,OACG,cAAClC,EAAD,UACG,cAAC,EAAD,CACGuB,KAAMW,EAAKX,KACXC,IAAKU,EAAKV,IACVC,SAAUS,EAAKT,SACfC,OAAQQ,EAAKR,OACbC,MAAOO,EAAKP,WCVXQ,EAAYlC,IAAOC,IAAV,kICOTkC,EAAM,WACjB,OACE,cAACD,EAAD,UACA,cAAC,EAAD,CAAaD,KAAMG,O,QCLvBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAe/B,MCTE,CAClBC,OAAQ,CACL+B,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNlC,YAAa,UACbE,cAAe,WAElBiC,QAAS,SAACC,GAAD,gBAAc,EAAIA,EAAlB,QDDR,SACA,cAAC,EAAD,QAGFC,SAASC,eAAe,W","file":"static/js/main.93687e1b.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Card = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 400px;\r\n  height: auto;\r\n  margin: 20px;\r\n  padding: 0;\r\n  border: 2px solid black;\r\n  border-radius: 4px;\r\n  transition: all .3s ease;\r\n    &:hover{\r\n  border-color: #4267B2;\r\n  background: #4267B2;\r\n}\r\n`;","import styled from '@emotion/styled';\r\n\r\nexport const Description = styled.div`\r\n   padding-bottom: 20px;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n   width: 70%;\r\n   height: auto;\r\n   object-fit: fill;\r\n   padding: 20px;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n   padding-bottom: 3px;\r\n   text-align: center;\r\n   font-weight: 500;\r\n   font-size: 16px;\r\n   line-height: 1.2;\r\n   color: ${(props) => `${props.theme.colors.primaryText}`};\r\n`;\r\n\r\nexport const Tag = styled.p`\r\n   padding-bottom: 1vh;\r\n   color: ${(props) => `${props.theme.colors.secondaryText}`};\r\n`;\r\n\r\nexport const Location = styled.p`\r\n   color: ${(props) => `${props.theme.colors.secondaryText}`};\r\n`;\r\n\r\nexport const StatsList = styled.ul`\r\n   display: flex;\r\n   padding: 0;\r\n   margin: 0;\r\n   ${'' /* justify-content: space-around; */}\r\n`;\r\n\r\nexport const StatsItem = styled.li`\r\n   flex: 100%;\r\n   padding: 10px;\r\n   display: flex;\r\n   flex-direction: column;\r\n   border: ${(props) => `1px solid ${props.theme.colors.secondaryText}`};\r\n`;\r\n\r\nexport const Label = styled.span`\r\n   font-weight: 500;\r\n   font-size: 12px;\r\n   line-height: 1.2;\r\n   color: ${(props) => `${props.theme.colors.secondaryText}`};\r\n`;\r\n\r\nexport const Quantity = styled.span`\r\n  color: ${(props) => `${props.theme.colors.primaryText}`};\r\n`;","import PropTypes from 'prop-types';\r\nimport { Description, Avatar, Name, Tag, Location, StatsList, StatsItem, Label, Quantity } from './ProfileInfo.styled';\r\n\r\n\r\nexport const ProfileInfo = ({ name, tag, location, avatar, stats }) => {\r\n   return (\r\n      <>\r\n         <Description>\r\n            <Avatar\r\n               src={avatar}\r\n               alt=\"Аватар пользователя\"\r\n            />\r\n            <Name>{name}</Name>\r\n            <Tag>{tag}</Tag>\r\n            <Location>{location}</Location>\r\n         </Description>\r\n\r\n         <StatsList>\r\n            <StatsItem>\r\n               <Label>Followers </Label>\r\n               <Quantity>{stats.followers}</Quantity>\r\n            </StatsItem>\r\n            <StatsItem>\r\n               <Label>Views </Label>\r\n               <Quantity>{stats.views}</Quantity>\r\n            </StatsItem>\r\n            <StatsItem>\r\n               <Label>Likes </Label>\r\n               <Quantity>{stats.likes}</Quantity>\r\n            </StatsItem>\r\n         </StatsList>\r\n      </>\r\n   )\r\n};\r\n\r\nProfileInfo.propTypes = {\r\n   name: PropTypes.string.isRequired,\r\n   tag: PropTypes.string.isRequired,\r\n   location: PropTypes.string.isRequired,\r\n   avatar: PropTypes.string.isRequired,\r\n   stats: PropTypes.string.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport { Card } from './ProfileCard.styled';\r\nimport { ProfileInfo } from 'components/Profile/ProfileInfo/ProfileInfo';\r\n\r\nexport const ProfileCard = ({ data }) => {\r\n   return (\r\n      <Card>\r\n         <ProfileInfo\r\n            name={data.name}\r\n            tag={data.tag}\r\n            location={data.location}\r\n            avatar={data.avatar}\r\n            stats={data.stats}\r\n         />\r\n      </Card>\r\n   );\r\n};\r\n\r\nProfileCard.propTypes = {\r\n   data: PropTypes.objectOf(\r\n      PropTypes.exact({\r\n         name: PropTypes.string.isRequired,\r\n         tag: PropTypes.string.isRequired,\r\n         location: PropTypes.string.isRequired,\r\n         avatar: PropTypes.string.isRequired,\r\n         stats: PropTypes.number.isRequired,\r\n      }).isRequired,\r\n   ),\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  padding: 30px;\r\n`;\r\n","import './App.css';\r\nimport userData from 'components/Profile/user.json';\r\nimport statisticData from 'components/StatisticSection/statistical-data.json';\r\nimport friendsData from 'components/FriendList/friends.json';\r\nimport transactionsData from 'components/TransactionHistory/transactions.json';\r\nimport { ProfileCard } from 'components/Profile/ProfileCard/ProfileCard';\r\nimport { Container } from './App.styled';\r\n\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Container>\r\n    <ProfileCard data={userData} />\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from 'components/App/App';\r\nimport { ThemeProvider } from '@emotion/react';\r\nimport { theme } from './constants';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n    <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","export const theme = {\r\n   colors: {\r\n      white: '#ffffff',\r\n      black: '#010101',\r\n      green: '#4caf50',\r\n      red: '#f44336',\r\n      blue: '#2196f3',\r\n      primaryText: '#212121',\r\n      secondaryText: '#757575',\r\n   },\r\n   spacing: (value) => `${4 * value}px`,\r\n};"],"sourceRoot":""}