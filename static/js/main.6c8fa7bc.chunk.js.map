{"version":3,"sources":["components/Profile/ProfileCard/ProfileCard.styled.js","components/Profile/ProfileInfo/ProfileInfo.styled.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/ProfileCard/ProfileCard.js","components/StatisticSection/Section/StatisticSection.styled.js","components/StatisticSection/StatsInfo/StatsInfo.styled.js","utils/randomHex.js","components/StatisticSection/StatsInfo/StatsInfo.js","components/StatisticSection/Section/StatisticSection.js","components/App/App.styled.js","components/FriendList/ItemsEl/ItemsEl.styled.js","components/FriendList/ItemsEl/ItemsEl.js","components/FriendList/ListEl/FriendList.styled.js","components/FriendList/ListEl/FriendList.js","components/TransactionHistory/TransactionHistory.styled.js","components/TransactionHistory/TransactionHistory.js","components/App/App.js","index.js","constants/theme.js"],"names":["Card","styled","div","Description","Avatar","img","Name","p","props","theme","colors","primaryText","Tag","secondaryText","Location","StatsList","ul","StatsItem","li","Label","span","Quantity","ProfileInfo","name","tag","location","avatar","stats","src","alt","followers","views","likes","ProfileCard","data","Section","section","Title","h2","Math","floor","random","toString","Percentage","StatsInfo","id","label","percentage","StatisticSection","title","map","Container","Item","Status","isOnline","red","green","ItemsEl","ListEl","FriendList","friends","Table","table","TableHead","thead","TableBody","tbody","TR","tr","TH","th","TD","td","TransactionHistory","transactions","type","amount","currency","App","userData","statisticData","friendsData","transactionsData","ReactDOM","render","StrictMode","white","black","blue","spacing","value","document","getElementById"],"mappings":"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","file":"static/js/main.6c8fa7bc.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Card = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 400px;\r\n  height: auto;\r\n  margin: 20px;\r\n  padding: 0;\r\n  border: 2px solid black;\r\n  border-radius: 4px;\r\n`;","import styled from '@emotion/styled';\r\n\r\nexport const Description = styled.div`\r\n   padding-bottom: 20px;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n   width: 100%;\r\n   height: auto;\r\n   object-fit: fill;\r\n   padding: 20px;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n   padding-bottom: 3px;\r\n   text-align: center;\r\n   font-weight: 500;\r\n   font-size: 16px;\r\n   line-height: 1.2;\r\n   color: ${(props) => `${props.theme.colors.primaryText}`};\r\n`;\r\n\r\nexport const Tag = styled.p`\r\n   padding-bottom: 1vh;\r\n   color: ${(props) => `${props.theme.colors.secondaryText}`};\r\n`;\r\n\r\nexport const Location = styled.p`\r\n   color: ${(props) => `${props.theme.colors.secondaryText}`};\r\n`;\r\n\r\nexport const StatsList = styled.ul`\r\n   display: flex;\r\n   padding: 0;\r\n   margin: 0;\r\n   ${'' /* justify-content: space-around; */}\r\n`;\r\n\r\nexport const StatsItem = styled.li`\r\n   flex: 100%;\r\n   padding: 10px;\r\n   display: flex;\r\n   flex-direction: column;\r\n   border: ${(props) => `1px solid ${props.theme.colors.secondaryText}`};\r\n`;\r\n\r\nexport const Label = styled.span`\r\n   font-weight: 500;\r\n   font-size: 12px;\r\n   line-height: 1.2;\r\n   color: ${(props) => `${props.theme.colors.secondaryText}`};\r\n`;\r\n\r\nexport const Quantity = styled.span`\r\n  color: ${(props) => `${props.theme.colors.primaryText}`};\r\n`;","import PropTypes from 'prop-types';\r\nimport { Description, Avatar, Name, Tag, Location, StatsList, StatsItem, Label, Quantity } from './ProfileInfo.styled';\r\n\r\n\r\nexport const ProfileInfo = ({ name, tag, location, avatar, stats }) => {\r\n   return (\r\n      <>\r\n         <Description>\r\n            <Avatar\r\n               src={avatar}\r\n               alt=\"Аватар пользователя\"\r\n            />\r\n            <Name>{name}</Name>\r\n            <Tag>{tag}</Tag>\r\n            <Location>{location}</Location>\r\n         </Description>\r\n\r\n         <StatsList>\r\n            <StatsItem>\r\n               <Label>Followers </Label>\r\n               <Quantity>{stats.followers}</Quantity>\r\n            </StatsItem>\r\n            <StatsItem>\r\n               <Label>Views </Label>\r\n               <Quantity>{stats.views}</Quantity>\r\n            </StatsItem>\r\n            <StatsItem>\r\n               <Label>Likes </Label>\r\n               <Quantity>{stats.likes}</Quantity>\r\n            </StatsItem>\r\n         </StatsList>\r\n      </>\r\n   )\r\n};\r\n\r\nProfileInfo.propTypes = {\r\n   name: PropTypes.string.isRequired,\r\n   tag: PropTypes.string.isRequired,\r\n   location: PropTypes.string.isRequired,\r\n   avatar: PropTypes.string.isRequired,\r\n   stats: PropTypes.string.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport { Card } from './ProfileCard.styled';\r\nimport { ProfileInfo } from 'components/Profile/ProfileInfo/ProfileInfo';\r\n\r\nexport const ProfileCard = ({ data }) => {\r\n   return (\r\n      <Card>\r\n         <ProfileInfo\r\n            name={data.name}\r\n            tag={data.tag}\r\n            location={data.location}\r\n            avatar={data.avatar}\r\n            stats={data.stats}\r\n         />\r\n      </Card>\r\n   );\r\n};\r\n\r\nProfileCard.propTypes = {\r\n   data: PropTypes.objectOf(\r\n      PropTypes.exact({\r\n         name: PropTypes.string.isRequired,\r\n         tag: PropTypes.string.isRequired,\r\n         location: PropTypes.string.isRequired,\r\n         avatar: PropTypes.string.isRequired,\r\n         stats: PropTypes.number.isRequired,\r\n      }).isRequired,\r\n   ),\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Section = styled.section`\r\n   margin: 0 auto;\r\n   padding-bottom: 5px;\r\n   ${'' /* display: flex; */}\r\n   ${'' /* flex: 1 1 1; */}\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n   padding: 5px;\r\n   font-weight: 900;\r\n   font-size: 16px;\r\n   line-height: 1.36;\r\n   letter-spacing: 0.06em;\r\n   color: ${(props) => `${props.theme.colors.primaryText}`};\r\n   text-transform: uppercase;\r\n`;","import styled from '@emotion/styled';\r\nimport { getRandomHex } from 'utils/randomHex';\r\n\r\nexport const StatsList = styled.ul`\r\n   padding: 0;\r\n   margin: 0;\r\n   background-color: ${getRandomHex()};\r\n`;\r\n\r\nexport const StatsItem = styled.li`\r\n   display: flex;\r\n   justify-content: space-around;\r\n   align-items: center;\r\n   padding: 5px;\r\n   border: ${(props) => `1px solid ${props.theme.colors.secondaryText}`};\r\n`;\r\n\r\nexport const Label = styled.span`\r\n   font-weight: 500;\r\n   font-size: 12px;\r\n   line-height: 1.2;\r\n   color: ${(props) => `${props.theme.colors.secondaryText}`};\r\n`;\r\n\r\nexport const Percentage = styled.span`\r\n  color: ${(props) => `${props.theme.colors.primaryText}`};\r\n`;\r\n","export const getRandomHex = () => {\r\n   return `#${Math.floor(Math.random()*16777215).toString(16)}`;\r\n};","import PropTypes from 'prop-types';\r\nimport { getRandomHex } from 'utils/randomHex';\r\nimport { StatsList, StatsItem, Label, Percentage } from './StatsInfo.styled'\r\n\r\nexport const StatsInfo = ({ id, label, percentage }) => {\r\n   return (\r\n      <StatsList>\r\n         <StatsItem key={id}>\r\n            <Label>{label}</Label>\r\n            <Percentage>{percentage}%</Percentage>\r\n         </StatsItem>\r\n      </StatsList>\r\n   )\r\n};\r\n\r\nStatsInfo.propTypes = {\r\n   id: PropTypes.string.isRequired,\r\n   label: PropTypes.string.isRequired,\r\n   percentage: PropTypes.number.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport { Section, Title } from './StatisticSection.styled';\r\nimport { StatsInfo } from '../StatsInfo/StatsInfo'\r\n\r\nexport const StatisticSection = ({ stats }) => {\r\n   return (\r\n      <Section>\r\n         {stats.title && <Title>{stats.title}</Title>}\r\n         {stats.map(({ id, label, percentage }) => (\r\n            <StatsInfo\r\n               id={id}\r\n               label={label}\r\n               percentage={percentage}\r\n            />\r\n         ))}\r\n      </Section>\r\n   );\r\n};\r\n\r\nStatisticSection.propTypes = {\r\n   stats: PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n         id: PropTypes.string.isRequired,\r\n         label: PropTypes.string.isRequired,\r\n         percentage: PropTypes.number.isRequired,\r\n      }),\r\n   ),\r\n}\r\n\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: 0 auto;\r\n  align-items: center;\r\n  text-align: center;\r\n  padding: 30px;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Item = styled.li`\r\n   position: relative;\r\n   padding: 10px;\r\n   border: ${(props) => `1px solid ${props.theme.colors.secondaryText}`};\r\n`;\r\n\r\nexport const Status = styled.span`\r\n   position: absolute;\r\n   bottom: 3px;\r\n   left: 3px;\r\n   width: 10px;\r\n   height: 10px;\r\n   border-radius: 50%;\r\n   background-color: ${(props) => `${props.isOnline ? props.theme.colors.red : props.theme.colors.green}`};\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n   width: 60px;\r\n   height: auto;\r\n   object-fit: fill;\r\n   padding: 10px;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n   padding-bottom: 5px;\r\n   color: ${(props) => `${props.theme.colors.primaryText}`};\r\n`;","import PropTypes from 'prop-types'\r\nimport { Avatar, Item, Name, Status } from './ItemsEl.styled';\r\n\r\nexport const ItemsEl = ({ avatar, name, isOnline, id }) => {\r\n   return (\r\n      <Item key={id}>\r\n         <Avatar src={avatar} alt={name} />\r\n         <Status isOnline={isOnline}></Status>\r\n         <Name>{name}</Name>\r\n      </Item>\r\n   )\r\n};\r\n\r\nItemsEl.propTypes = {\r\n   avatar: PropTypes.string.isRequired,\r\n   name: PropTypes.string.isRequired,\r\n   id: PropTypes.string.isRequired,\r\n   isOnline: PropTypes.bool.isRequired,\r\n}","import styled from '@emotion/styled';\r\n\r\nexport const ListEl = styled.ul`\r\n   display: flex;\r\n   padding: 0;\r\n   margin: 20px;\r\n`;","import PropTypes from 'prop-types'\r\nimport { ItemsEl } from '../ItemsEl/ItemsEl';\r\nimport { ListEl } from './FriendList.styled';\r\n\r\nexport const FriendList = ({ friends }) => {\r\n   return (\r\n      <ListEl>\r\n         {friends.map(({ avatar, name, isOnline, id }) => (\r\n            <ItemsEl\r\n               avatar={avatar}\r\n               name={name}\r\n               isOnline={isOnline}\r\n               id={id}\r\n            />\r\n         ))}\r\n      </ListEl>\r\n   )\r\n};\r\n\r\nFriendList.propTypes = {\r\n   friends: PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n         avatar: PropTypes.string.isRequired,\r\n         name: PropTypes.string.isRequired,\r\n         id: PropTypes.string.isRequired,\r\n         isOnline: PropTypes.bool.isRequired,\r\n      }),\r\n   ),\r\n}","import styled from '@emotion/styled';\r\n\r\nexport const Table = styled.table`\r\n  margin: 0 auto;\r\n  color: #333;\r\n  background: white;\r\n  border: 1px solid grey;\r\n  font-size: 12pt;\r\n  border-collapse: collapse;\r\n`;\r\n\r\nexport const TableHead = styled.thead`\r\n\tfont-weight: bold;\r\n\ttext-align: left;\r\n\tborder: none;\r\n\tpadding: 10px 15px;\r\n\tbackground: #d8d8d8;\r\n\tfont-size: 14px;\r\n`;\r\n\r\nexport const TableBody = styled.tbody`\r\n\ttext-align: left;\r\n\tborder: none;\r\n\tpadding: 10px 15px;\r\n\tfont-size: 14px;\r\n\tvertical-align: top;\r\n`;\r\n\r\nexport const TR = styled.tr`\r\n`;\r\n\r\nexport const TH = styled.th`\r\n  padding: .5em;\r\n  border: 1px solid lightgrey;\r\n`;\r\n   \r\nexport const TD = styled.td`\r\n  padding: .5em;\r\n  border: 1px solid lightgrey;\r\n`;","import PropTypes from 'prop-types'\r\nimport { Table, TableBody, TableHead, TD, TH, TR } from './TransactionHistory.styled';\r\n\r\nexport const TransactionHistory = (({ transactions }) => {\r\n   return (\r\n      <Table>\r\n   \r\n         <TableHead>\r\n            <TR>\r\n               <TH>Type</TH>\r\n               <TH>Amount</TH>\r\n               <TH>Currency</TH>\r\n            </TR>\r\n         </TableHead>\r\n\r\n         <TableBody>\r\n            {transactions.map(({ id, type, amount, currency }) => (\r\n               <TR key={id}>\r\n                  <TD>{type}</TD>\r\n                  <TD>{amount}</TD>\r\n                  <TD>{currency}</TD>\r\n               </TR>\r\n         ))}\r\n         </TableBody>\r\n         \r\n      </Table>\r\n   )\r\n});","import './App.css';\r\nimport userData from 'components/Profile/user.json';\r\nimport statisticData from 'components/StatisticSection/statistical-data.json';\r\nimport friendsData from 'components/FriendList/friends.json';\r\nimport transactionsData from 'components/TransactionHistory/transactions.json';\r\nimport { ProfileCard } from 'components/Profile/ProfileCard/ProfileCard';\r\nimport { StatisticSection } from '../StatisticSection/Section/StatisticSection';\r\nimport { Container } from './App.styled';\r\nimport { FriendList } from 'components/FriendList/ListEl/FriendList';\r\nimport { TransactionHistory } from 'components/TransactionHistory/TransactionHistory';\r\n\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Container>\r\n      <ProfileCard data={userData} />\r\n      <StatisticSection stats={statisticData} />\r\n      <FriendList friends={friendsData} />\r\n      <TransactionHistory transactions={transactionsData}/>\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from 'components/App/App';\r\nimport { ThemeProvider } from '@emotion/react';\r\nimport { theme } from './constants';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n    <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","export const theme = {\r\n   colors: {\r\n      white: '#ffffff',\r\n      black: '#010101',\r\n      green: '#4caf50',\r\n      red: '#f44336',\r\n      blue: '#2196f3',\r\n      primaryText: '#212121',\r\n      secondaryText: '#757575',\r\n   },\r\n   spacing: (value) => `${4 * value}px`,\r\n};"],"sourceRoot":""}